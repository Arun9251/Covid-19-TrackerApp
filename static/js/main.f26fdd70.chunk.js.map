{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countries","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","corona","alt","CountryPicker","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f26fdd70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__TYAkU\",\"card\":\"Cards_card__H_F4D\",\"infected\":\"Cards_infected__29vYY\",\"recovered\":\"Cards_recovered__OEVCA\",\"deaths\":\"Cards_deaths__chmBJ\"};","import React from \"react\"\r\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\"\r\nimport CountUp from \"react-countup\" //for increasing numbers grphically\r\nimport cx from \"classnames\"\r\n\r\n\r\nimport styles from \"./Cards.module.css\"\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return \"...Loading...\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n        <Grid container spacing = {3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n        <CardContent>\r\n        <Typography color = \"textSecondary\" gutterBottom>Infected</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp\r\n        start={0}\r\n        end={confirmed.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant = \"body2\">Number of active cases of COVID-19</Typography>\r\n        </CardContent>\r\n        \r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n        <Typography color = \"textSecondary\" gutterBottom>Recovered</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp\r\n        start={0}\r\n        end={recovered.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant = \"body2\">Number of recoveries from COVID-19</Typography>\r\n        </CardContent>\r\n        \r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n        <CardContent>\r\n        <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp\r\n        start={0}\r\n        end={deaths.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant = \"body2\">Number of deaths caused by COVID-19</Typography>\r\n        </CardContent>\r\n        \r\n        </Grid>\r\n\r\n        </Grid>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\"\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n\r\n    if(country) {\r\n        changeableURL =  `${url}/countries/${country}`\r\n    }\r\n    \r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableURL);\r\n\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n      \r\n          \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\ntry {\r\n    const {data} = await axios.get(`${url}/daily`)\r\n    \r\n    const modifiedData = data.map((dailyData) => ({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n    }))\r\n    return modifiedData;\r\n} catch (error) {\r\n    \r\n}\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React,{useState, useEffect} from \"react\"\r\nimport { fetchDailyData } from \"../../api\"\r\nimport {Line, Bar} from \"react-chartjs-2\"\r\n\r\nimport styles from \"./Chart.module.css\"\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths} , country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n     \r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n        data={{\r\n            labels:dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: \"Infected\",\r\n                borderColor: \"#3333ff\",\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: \"Deaths\",\r\n                borderColor: \"red\",\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    )\r\n        const barChart = (\r\n            confirmed\r\n            ? (\r\n                <Bar\r\n                data = {{\r\n                    labels: [\"Infected\", \"Recovered\",\"Deaths\"],\r\n                    datasets:[{\r\n                        label:\"People\",\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                        ],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend:{display:false},\r\n                    title:{display:true, text: `Current state in ${country}`}\r\n                }}\r\n                />\r\n            ) : null\r\n        )\r\n    return(\r\n       <div className = {styles.container}>\r\n       {country ? barChart : lineChart}\r\n       \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\"\r\nimport styles from \"./App.module.css\"\r\nimport {fetchData} from \"./api\"\r\nimport corona from \"./images/covid19.png\"\r\n\r\n\r\n\r\nclass App extends React.Component {\r\nstate = {\r\n    data: {},\r\n    country:\"\"\r\n}\r\n\r\n\r\n    async componentDidMount() {\r\n    const fetchedData = await fetchData(); \r\n    \r\n    this.setState({data: fetchedData});\r\n  \r\n    }\r\n    handleCountryChange = async (country) => {\r\n        //fetch the fetchData\r\n        const fetchedData = await fetchData(country)\r\n           //set the state\r\n           this.setState({data: fetchedData, country: country});\r\n    }\r\n    render(){\r\n        const {data, country} = this.state\r\n    return(\r\n        <div className={styles.container}>\r\n        <img className={styles.image} src={corona} alt=\"COVID-19\"/>\r\n       <Cards data={data}/>\r\n       <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n       <Chart data={data} country = {country}/>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\n\r\nimport App from \"./App\"\r\n\r\nReactDom.render(<App/>,document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1GDer\",\"image\":\"App_image__1aqm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3grP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__V8mCA\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}