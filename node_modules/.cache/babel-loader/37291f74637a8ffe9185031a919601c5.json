{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\react20\\\\COVID_19-Tracker-App-master\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/aruns/Desktop/react20/COVID_19-Tracker-App-master/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAqBC,IAAAA;AAArB,GAAN;AAAqCC,EAAAA;AAArC,CAAD,KAAmD;AAC7D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAE,IAAAA,QAAQ;AACX,GANQ,EAMP,EANO,CAAT;AAQA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,gBACA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNf,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACZ,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADA;AAENe,QAAAA,KAAK,EAAE,UAFD;AAGNC,QAAAA,WAAW,EAAE,SAHP;AAINC,QAAAA,IAAI,EAAE;AAJA,OAAD,EAKN;AACClB,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADP;AAECa,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,mBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OALM;AAFP,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAiBM,IAlBV;AAoBI,QAAME,QAAQ,GACVnB,SAAS,gBAEL,oBAAC,GAAD;AACA,IAAA,IAAI,EAAI;AACJW,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAAyB,QAAzB,CADJ;AAEJG,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAC,QADA;AAENG,QAAAA,eAAe,EAAC,CACZ,mBADY,EAEZ,mBAFY,EAGZ,mBAHY,CAFV;AAONnB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACoB,KAAX,EAAiBnB,SAAS,CAACmB,KAA3B,EAAiClB,MAAM,CAACkB,KAAxC;AAPC,OAAD;AAFL,KADR;AAaA,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADF;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAeE,QAAAA,IAAI,EAAG,oBAAmBrB,OAAQ;AAAjD;AAFD,KAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAoBL,IArBR;AAuBJ,sBACG;AAAK,IAAA,SAAS,EAAIN,MAAM,CAAC4B,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,OAAO,GAAGgB,QAAH,GAAcV,SADtB,CADH;AAMH,CA5DD;;AA8DA,eAAeX,KAAf","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\nimport { fetchDailyData } from \"../../api\"\r\nimport {Line, Bar} from \"react-chartjs-2\"\r\n\r\nimport styles from \"./Chart.module.css\"\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths} , country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n     \r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n        data={{\r\n            labels:dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: \"Infected\",\r\n                borderColor: \"#3333ff\",\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: \"Deaths\",\r\n                borderColor: \"red\",\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    )\r\n        const barChart = (\r\n            confirmed\r\n            ? (\r\n                <Bar\r\n                data = {{\r\n                    labels: [\"Infected\", \"Recovered\",\"Deaths\"],\r\n                    datasets:[{\r\n                        label:\"People\",\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                        ],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend:{display:false},\r\n                    title:{display:true, text: `Current state in ${country}`}\r\n                }}\r\n                />\r\n            ) : null\r\n        )\r\n    return(\r\n       <div className = {styles.container}>\r\n       {country ? barChart : lineChart}\r\n       \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}